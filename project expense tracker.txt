import tkinter as tk
from tkinter import ttk, messagebox
import sqlite3
from datetime import datetime

# --- DATABASE SETUP ---
conn = sqlite3.connect('expenses.db')
cursor = conn.cursor()

cursor.execute("""
CREATE TABLE IF NOT EXISTS expenses (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    amount REAL NOT NULL,
    category TEXT NOT NULL,
    note TEXT,
    date TEXT NOT NULL
)
""")
conn.commit()

# --- FUNCTIONS ---

def add_expense():
    try:
        amount = float(amount_entry.get())
        category = category_entry.get()
        note = note_entry.get()
        date = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

        if category == "":
            messagebox.showerror("Error", "Category is required.")
            return

        cursor.execute("INSERT INTO expenses (amount, category, note, date) VALUES (?, ?, ?, ?)",
                       (amount, category, note, date))
        conn.commit()
        messagebox.showinfo("Success", "Expense added successfully.")
        clear_entries()
        load_expenses()
    except ValueError:
        messagebox.showerror("Error", "Please enter a valid amount.")

def delete_expense():
    selected = tree.focus()
    if not selected:
        messagebox.showwarning("Warning", "No item selected.")
        return
    expense_id = tree.item(selected)['values'][0]
    cursor.execute("DELETE FROM expenses WHERE id=?", (expense_id,))
    conn.commit()
    load_expenses()

def load_expenses():
    for row in tree.get_children():
        tree.delete(row)
    
    cursor.execute("SELECT * FROM expenses ORDER BY date DESC")
    rows = cursor.fetchall()
    total = 0

    for row in rows:
        tree.insert('', 'end', values=row)
        total += row[1]

    total_label.config(text=f"Total Expense: ₹{total:.2f}")

def clear_entries():
    amount_entry.delete(0, tk.END)
    category_entry.delete(0, tk.END)
    note_entry.delete(0, tk.END)

# --- GUI SETUP ---
root = tk.Tk()
root.title("Expense Tracker")
root.geometry("700x500")
root.resizable(False, False)

# Input Frame
frame = tk.Frame(root, pady=10)
frame.pack()

tk.Label(frame, text="Amount (₹):").grid(row=0, column=0, padx=5, pady=5)
amount_entry = tk.Entry(frame)
amount_entry.grid(row=0, column=1, padx=5, pady=5)

tk.Label(frame, text="Category:").grid(row=1, column=0, padx=5, pady=5)
category_entry = tk.Entry(frame)
category_entry.grid(row=1, column=1, padx=5, pady=5)

tk.Label(frame, text="Note:").grid(row=2, column=0, padx=5, pady=5)
note_entry = tk.Entry(frame)
note_entry.grid(row=2, column=1, padx=5, pady=5)

tk.Button(frame, text="Add Expense", command=add_expense).grid(row=3, column=0, columnspan=2, pady=10)

# Treeview (Table)
columns = ("ID", "Amount", "Category", "Note", "Date")
tree = ttk.Treeview(root, columns=columns, show='headings', height=10)
for col in columns:
    tree.heading(col, text=col)
    tree.column(col, anchor="center")
tree.pack(pady=10)

# Buttons & Summary
tk.Button(root, text="Delete Selected", command=delete_expense).pack(pady=5)
total_label = tk.Label(root, text="Total Expense: ₹0.00", font=("Arial", 12, "bold"))
total_label.pack(pady=5)

# Initial Load
load_expenses()
root.mainloop()